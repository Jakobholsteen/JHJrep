#import libraries

import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

seed = 2000       
N  = 2.**7.2    # increments

def Brownian(seed, N):
    
    np.random.seed(seed)                         
    dt = 1./N                                    # time step
    b = np.random.normal(0., 1., int(N))*np.sqrt(dt)  # brownian increments
    W = np.cumsum(b)                             # brownian path
    return W, b


# brownian increments
b = Brownian(seed, N)[1]

# brownian motion
W = Brownian(seed, N)[0]
W = np.insert(W, 0, 0.)                      # W_0 = 0. for brownian motion



# GBM Exact Solution

# Parameters
#
# So:     initial stock price
# mu:     returns (drift coefficient)
# sigma:  volatility (diffusion coefficient)
# W:      brownian motion
# T:      time period
# N:      number of increments

def GBM(So, mu, sigma, W, T, N):    
    t = np.linspace(0.,1.,N+1)
    S = []
    S.append(So)
    for i in range(1,int(N+1)):
        drift = (mu - 0.5 * sigma**2) * t[i]
        diffusion = sigma * W[i-1]
        S_temp = So*np.exp(drift + diffusion)
        S.append(S_temp)
    return S, t

So = 55.25
mu = 0.15
sigma = 0.4
W = Brownian(seed, N)[0]
T = 1.
N = 2.**7.2

soln = GBM(So, mu, sigma, W, T, N)[0]    # Exact solution
t = GBM(So, mu, sigma, W, T, N)[1]       # time increments for  plotting



T = 1.
N = 2.**7.2
#So = adj_close[0]

seed = 5
W = Brownian(seed, N)[0]
soln2 = GBM(So, mu, sigma, W, T, N)[0]    

seed = 15
W = Brownian(seed, N)[0]
soln3 = GBM(So, mu, sigma, W, T, N)[0]    

# adjusting the original time array from days to years
#time = np.linspace(1, len(adj_close), len(adj_close))
#time = [i/252. for i in time]

#plt.plot(time, adj_close, label = 'Actual')
#plt.plot(t, soln, label = 'GBM (seed = 22)', ls = '--')
#plt.plot(t, soln2, label = 'GBM (seed = 5)', ls = '--')
#plt.plot(t, soln3, label = 'GBM (seed = 15)', ls = '--')

#plt.ylabel('AMZN Stock Price, $')
#plt.title('Geometric Brownian Motion')

#plt.legend(loc = 'upper left')



# Import the price data of General Motors

df = yf.download('CARL-B.CO','2008-01-02', '2020-4-2')
#df['Adj Close'].plot(figsize=(10,7))
#plt.legend()
#plt.grid()
#plt.show()
#df.tail()

plt.subplot(1, 2, 1)
df['Adj Close'].plot(figsize=(15,8))
plt.title('Aktiekurs for Carlsberg A/S')
plt.xlabel('Dato')
plt.ylabel('Kurs DKK')
plt.grid()


plt.subplot(1, 2, 2)
plt.plot(t, soln2, label = 'GBM (seed = 5)', ls = '-')
plt.title('Proces for hvid st√∏j - "random walk"')
plt.xlabel('Tid')
plt.ylabel('')

plt.grid()
plt.show()
